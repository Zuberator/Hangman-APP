body {
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  min-height: 100vh;
  font-family: monospace;
  text-align: center;
  margin: 0;
}

.hide {
  transform: translateY(-100%);
}

h1 {font-size: clamp(2em, 10vw, 4em); letter-spacing: 3px; margin: 0;}

/* LANDING */

.landing {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  position: absolute;
  height: 100vh;
  width: 100vw;
  background: #000;
  color: #fff;
  transition: 2s;
  z-index: 999;
  gap: 2rem;
}

/* LANDING - TYPE WORD */

#landing-typeword {
  color: #000;
  background: #fff;
  z-index: 99;
}

input {
  box-sizing: border-box;
  width: 200px;
  padding: 1em;
  border: 1px solid #000;
  font-size: 11px;
  margin: 0;
}

hr {
  width: 50%;
}

#draw {
  color: #fff;
  background: #000;
}

/* WRAPPER */

#game {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: 3em;
}

/* BUTTONS */

button {
  border-radius: 50%;
  width: 80px;
  height: 80px;
  cursor: pointer;
  background: #fff;
  color: #000;
  border: none;
  transition: .5s;
}

button:hover {
  opacity: .75;
}

#buttonrestart {
  position: absolute;
  inset: 10px 10px auto auto;
  width: 10vw;
  max-width: 75px;
  height: auto;
  aspect-ratio: 1/1;
  font-size: clamp(1px, 5vw, 3rem);
  color: #fff;
  background: #000;
}

.stats {
  position: absolute;
  top: 10px;
  left: 10px;
}

#allGuessesBox {
  width: 10vw;
  max-width: 75px;
  height: auto;
  aspect-ratio: 1/1;
  font-size: clamp(1px, 5vw, 3rem);
  color: #fff;
  background: green;
}

#badGuessesBox {
  width: 10vw;
  max-width: 75px;
  height: auto;
  aspect-ratio: 1/1;
  font-size: clamp(1px, 5vw, 3rem);
  color: #fff;
  background: tomato;
}

/* KEYBOARD */

#keyboard {
  display: grid;
  justify-items: center;
  grid-template-columns: repeat(7, 1fr);
  gap: 5px;
  width: 100vw;
  max-width: 500px;
}

#keyboard .key {
  width: 100%;
  max-width: 100%;
  height: auto;
  border-radius: 50%;
  aspect-ratio: 40/40;
  cursor: pointer;
  transition: 1s;
}

#keyboard .key:hover {
  transition: 0s;
}

#keyboard .key:not([class*="disabled"]):hover {
  background: #000;
  color: #fff;
}

#keyboard .disabled {
  background: red;
  opacity: 0.4;
  cursor: not-allowed;
  color: #fff;
}

#keyboard .found {background: green;}

/* HANGMAN */

/* #hangman {
  display: flex;
  justify-content: center;
  width: 100vw;
  max-width: 500px;
} */

html body svg {
  width: 50vw;
  max-width: 300px;
}

html body svg * {
  fill: none;
  stroke: #EEEEEE;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-miterlimit: 10;
  transition: 0.25s;
}

html body input:not([correct]):checked ~ .hangman .stage1,
html body input:not([correct]):checked ~ input:not([correct]):checked ~ .hangman .stage2,
html body input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ .hangman .stage3,
html body input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ .hangman .stage4,
html body input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ .hangman .stage5,
html body input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ .hangman .stage6,
html body input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ .hangman .stage7,
html body input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ .hangman .stage8,
html body input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ .hangman .stage9,
html body input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ input:not([correct]):checked ~ .hangman .stage10 {
  stroke: black;
  display: grid;
}